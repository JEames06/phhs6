{"/":{"title":"SethMB Work","content":"\nWelcome to my digital garden! üçì\n\nThis site is primarily used to host school work for sixth form. Other content may be stored here. It is recommended that you navigate this site using links that you have been sent, but basic navigation is available too.\n\n# Subjects\n\nI have attached a link to all work for each subject below.\n\n### üíª[Computer Science](/tags/compsci)\n\n### ü¶†[Biology](/tags/biology)\n\n### üí∞[Business Studies](/tags/business)\n\nOther, miscellaneous work may be found via the search function or the interactive graph. \n\nIf you notice an issue with the site or need help, please email \nüìå **seth@sethmb.xyz** for assistance.\n\n","lastmodified":"2022-09-23T13:19:45.241854547Z","tags":null},"/privacy":{"title":"Privacy Policy","content":"\n\u003e [!info] Disclaimer\n\u003e\n\u003e This website is built as a hobby project - it is intended mainly for personal use and is provided publicly free of charge. I go out of my way to try and reduce data harvesting, but due to the use of third-party tools I cannot gurantee this.\n\n**What data we collect**\n\n*Umami* is used to collect basic analytical data on site visitors - this data is used solely for optimising the website. No personally identifiable data is collected.\n\nHere is a statement from Umami's website:\n\n**Is Umami GDPR compliant?**\n\n\u003e Yes, Umami does not collect any personally identifiable information and anonymizes all data collected. Users cannot be identified and are never tracked across websites.\n\nFor clarification, we host our own Umami instance - so no third-party has access to this data.\n\nUmami does not use cookies.\n\nWe also use **Google Adsense** for monetization. Please review Google's privacy policy for further details on this. Whilst it is appreciated if you view the site with ads - if you are concerned for your privacy using an adblocker is okay, I'm not using this site to buy food.  \n\nWe host the site on **GitHub Pages**, using their default settings. This means some information about you and your browser will be provided to GitHub - their privacy policy can be found here: [GitHub privacy](https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement)\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.241854547Z","tags":null},"/sixth/Biology/Cells/CellTheory":{"title":"Cell Theory","content":"\nCell theory is the basic foundation on which our understanding of cells is built.\n\n## The discovery of cell theory over time\n\n**Robert Hooke** - 1665\n\n- cork cells\n- \"tiny boxes\"\n\n**Anton van Leeuwenhoek** - 1673\n\n- \"Animacules\", later called bacteria\n\n**Robert Brown** - 1833\n\n- Discovered the [nucleus](sixth/Biology/Cells/Organelles#nucleus) in plant cells\n\n**Matthias Schleiden** - 1838\n\n- Every plant is made of cells\n\n**Theodor Schwann** - 1839\n\n- Every animal is made of cells\n\n**Albrecht von Roelliker** - 1840\n\n- Sperm + Egg are cells - life comes from cells.\n\n**Carl Heinrich Braun** - 1845\n\n- Reworks theory, names cells \"the basic unit of life\"\n\n**Rudolf Virchow** - 1855\n\n- Cells come from other cells\n\n\n## Modern cell theory\n\n- The cell contains hereditary information (DNA) which is passed on from cell to cell during division.\n- All cells are basically the same in terms of chemical composition and metabolic activities.\n- All basic chemical and physiological functions are carried out inside cells. (Movement, digestion etc)\n- Cell activity depends on the activities of sub-cellular structures within the cell (organelles, nucleus, plasma membrane etc etc)\n\n\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Biology/Cells/Cytoskeleton":{"title":"Cytoskeleton","content":"\n![http://cellstructure.pbworks.com/f/big_cytoskeletoncover.jpg](http://cellstructure.pbworks.com/f/big_cytoskeletoncover.jpg)\n\n## Microfilaments\n\nSize: 7nm\nMade from: polymers of actin\nRoles: Give support and mechanical strength, keep cell shape and enable movement\n\n## Intermediate filaments\n\nSize: 10nm\nMade from: variety of proteins\nRoles: Anchor nucleus, extend between membranes\n\n## Microtubules\nSize: 18-30nm\nMade from: tubulin\nRoles: Form tracks for motor proteins (dyein and kinesin) to walk and drag organelles.\n\n\nOverview in [Organelles](sixth/Biology/Cells/Organelles)\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Biology/Cells/Organelles":{"title":"Organelles","content":"![[sixth/Biology/Cells/img/Pasted image 20220908112443.png]]\n\n\n\n## Rough Endoplasmic Reticulum (rER/Rough ER)\nThis is a system of membranes containing fluid filled cavities that are connected to the nuclear membrane. The distinguishing factor between rough and smooth ER is that rough ER is coated with ribosomes.\n\nrER is the cells internal transport system and creates channels that enable the transport of substances from one section of the cell to another. The rER provides a large surface area for ribosomes to attach. The ribosomes assemble proteins from amino acids , these proteins are then absorbed through the membrane and are transported by the rER to the Golgi Apparatus for modification and packaging. \n\n## Smooth Endoplasmic Reticulum (sER/Smooth ER)\nLike the rER, this is a system of membrances within the cell that contain fluid-filled cavities that link to the nuclear envelope. It DOES NOT have ribosomes on its surface.\n\nsER contains enzymes that catalyse reactions involved with the metabolism of lipids. This includes: \n\n- synthesis of cholesterol\n- synthesis of lipids/phospholids needed by the cell\n- synthesis of steroid hormones\n\nIt is involved with the absorption, synthesis and transport of lipids from the gut.\n\n## Golgi Apparatus\nThis consist of a stack of membrane bound flattened sacs. Secretory vesicles bring materials to  and from the Golgi. \n\nProteins are modified here. Examples include:\n\n- adding sugar molecules to make glycoproteins\n- adding lipid molecules to make lipoproteins\n- folding proteins into their 3D shape\n\nThese proteins are then packaged into vesicles that are pinched off and then:\n\n- stored in the cell\n- moved to the plasma membrane, either to be incorporated into the plasma membrane or to be exported out of the cell.\n\n## Mitochondria\n\nThese are usually spherical, rod-shaped or branched structures and are typically 2-5Œºm long. They are enclosed in two membranes with a fluid-filled space between them. The inner membrane is highly folded into cristae. The inner-most section of the mitochondria is a fluid-filled matrix.\n\nMitochondria are the site of ATP production during aerobic respiration. They are also self-replicating, so more can be made to meet energy denand if the cell requires it. They are abundant in cells where any form of metabolic activity takes place. This includes cells in your liver and synapses.\n\n## Vacuole\nThe vacuole is surrounded by a membrane called the tonoplast and contains fluid. \n\nOnly plant cells have a large permanent vacuole. They are filled with water and various solutes to maintain the stability of the cell - as when they are full they exert force on the cell wall, causes the cell to become turgid. If all the plant cells are turgid, this helps to support non-woody plants.\n\n## Lysosomes\nThese are small bags formed from the Golgi apparatus. Each is enclosed within a single membrane. They contain powerful hydrolytic (digestive) enzymes. They are abundant in immune cells such as phagocytes, neutrophils and macrophages that can ingest and digest invading bacteria. \n\nLysosomes keep the dangerous enzymes seperate from the rest of the cell, preventing damage to organelles. Lysosomes can engulf dead cell organelles and foreign matter and return digested components for reuse. \n\n## Cilia and undulipodia\nThese are protrusions from the cell and are surrounded by the cell surface membrane. Each contains microtubules (see Cytoskeleton for more details). They are formed from centrioles.\n\nThe epitheal cells lining your airways have many hundreds of cilia that beat and move the band of mucus. Nearly all cell types in the body have one cilium that acts as an antenna. It contains receptors and allows cells to detect signals about their immediate environment. The only human cell to have an undulipodium (a lot of cillium) is a spermatozoon. The unulipodium allows the spermatozoon to move.\n\n## Ribosomes\nSmall, spherical and about 20nm in diameter they are constructed from ribosomal RNA. They are made in the nucleolus from two different subunits which pass through the nucelar envelope into the cell cytoplasm and then combine. Some remain free in the cytoplasm and some attach to the rER.\n\nRibosomes bound to the exterior of the rER are mainly for synthesising proteins that will be exported out of the cell. Ribosomes that are free in the cytoplasm - either singularly or in a cluster - are primarily a site for synthesising proteins that will be used in the cell. \n\n## Centrioles\nThe centrioles consist of two bundles of microtubles at right angles to each other. The microtubules are made of tublin protein subunits, and are arranged to form a cylinder.\n\nBefore a cell divides, the spindle, made of threads of tubulin, forms from the centrioles. Chromosomes attach to the middle part of the spindle and motor proteins walk along the tubin threads, pulling the chromosomes to opposite ends of the cell. Centrioles are involved in the formation of cilia and undulipodia:\n\n- Before the cilia form, the centrioles multiply and line up beneath the cell surface membrane.\n- Microtubules then sprout outwards from each centriole, forming a cilium or undulipodium.\n\nCentrioles are usually absent from unicellular green algae.\n\n## Cytoskeleton\nA network of protein structures within the cytoplasm. It consists of:\n\n- rod-like microfilaments made of subunits of the protein actin; they are polymers of actin and each microfilament is about 7nm in diameter.\n- intermmediate filaments about 10nm in diameter.\n- straight, cylindrical microtubules, made of protein subunits called tubulin, about 18-30nm in diameter. \n- The **cytoskeletal motor proteins**, myosins, kinesins and dyeins, are molecular motors. They are also enzymes and have a site that binds to and allows hydrolysis of ATP as their energy source.\n\nThe protein microfilaments within the cytoplasm give support and mechanical strength, keep the cell's shape stable and allow cell movement. They also:\n\n- form the spindle before cell division\n- form a track for motor proteins to walk along\n- make up the cilia, undulipodia and centrioles\n\nAnd intermediate filaments:\n\n- anchor the nucleus to the cytoplasm\n- extend between cells in certain tissues, enabling cell-cell signalling.\n\n## Cellulose cell wall\nThe cell wall of plants is outside the plasma membrane and is constructed from a bundle of cellulose fibres.\n\nThe cell wall is strong and and can prevent plant cells from bursting when turgid. The cell wall:\n\n- provides strength\n- maintain cell shape\n- contribute to strength and support of the whole plant\n- are permeable and allow solutions to pass through\n\nFungi have cell walls that contain chitin, not cellulose.\n\n## Chloroplasts\nThese are large organelles, 4-10¬µm long. They are only present in plants and some protoctists. They are surrounded by a double membrane or envelope. The inner membrane is continuous with flattened membrane sacs called thylakoids. The fluid-filled matrix is called the stroma.\n\nChloroplasts are the site of photosynthesis\nThe first stage of photosynthesis is when light energy is trapped by chlorophyll and used to make ATP. This occurs in the grana. Water is also split to provide hydrogen ions.\nThe second stage when hydrogen reduces carbon dioxide, using energy from ATP to make carbohydrates, occurs in the stroma. \n\nChloroplasts are abundant in leaf cells, particularly the pallisade mesophyll layer.\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Biology/Cells/PlantCells":{"title":"Plant Cells","content":"\nSee Chloroplasts, Vacuole and Cell Wall from [Organelles](sixth/Biology/Cells/Organelles)\n\nCells are typically viewed under [Light Microscopes](sixth/Biology/Cells/UsingALightMicroscope)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Biology/Cells/UsingALightMicroscope":{"title":"Using a Light Microscope","content":"\n**Maximum light microscope magnification possible:** x1500 (x15 eyepiece, x100 objective lens)\n\nSpecimens can be dyed/stained.\n\n![[sixth/Biology/Cells/img/Pasted image 20220921104632.png]]\n\n## Staining\n\n- Many biological materials are not coloured\n- Some chemicals can bind to a specimen, giving it a colour\n- It produces a contrast between sample parts\n- Some stains are specific to cell structures, enabling for easily distinguishing between different cell parts.\n\n## Graticules\nThe stage micrometer is used to calibrate the value of eyepiece divisions at different magnifications.\n\nGraticule scale is arbitrary until calibrated.\n\n1000¬µm in 1mm\n100¬µm in 0.1mm\n10¬µm in 0.01mm\netc etc\n\n### Calibration\n\n1) Insert the eyepiece graticule. It has 10 divisions.\n2) Place stage micrometer on stage and focus using 4x objective lens. Total magnification = x40 (x10 due to other lens)\n3) Align graticule and stage micrometer.\n4) We know the stage micrometer is 1mm, or 1000¬µm - the same as 40 eyepiece divisions.\n5) Therefore, each eyepiece division = 1000¬µm / 40 = **25¬µm**\n\nSo each little epu (eyepiece unit) is 25¬µm long. Now you are able to measure cells at a 4x magnification with accuracy. \n\nLet's do the same for the x10 objective lens:\n\nUsing the above method, but substituting the numbers to work for the x10 lens gives us the following:\n\nTotal magnification = 100 (10x10)\n\n100 eyepiece divisions is stage micrometer length.\n\nTherefore each epu = **10¬µm** (1000¬µm / 100 = 10¬µm)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Business/Units/3.1/BusinessObjectives":{"title":"Business Objectives","content":"\n![[sixth/Business/Units/3.1/img/Pasted image 20220914095046.png]]\n*The hierarchy of objectives*\n\n---\n\n\n**SMART** - acronym helps management set effective objectives\n\nS - Specific; the objective should state exactly what is to be achieved.\n\nM - Measureable; an objective should be capable of measurement - so that it is possible to determine success.\n\nA - Achieveable; the objective should be realistic given the circumstances in which it is set.\n\nR - Relevant; objectives should be relevant to the people responsible for achieving them.\n\nT - Time Bound; objectives should be set with a time-frame in mind. These deadlines should be realistic.\n\n\u003e [!success] Business should follow SMART\n\u003e\n\u003e SMART objectives focus the business on what is important, ensuring that they stay on track.\n\n## Strategic vs Tactical objectives\n\nStrategic objectives focus on the long term, and are set by the board.\n\nTactical objectives tend to be more short term, and can be set by line managers.\n\n## Business Aims \u0026 Objectives Activity Worksheet\n\n#### Explain the difference between an aim and an objective\nAn aim is an overall target or goal for the business. Whereas objectives are smaller targets to help reach the aim. A business may have several different objectives to reach a single aim.\n\n#### Why do businesses have aims and objectives?\nThis gives them a purpose and a target to work towards.\n\n#### Describe what financial aims are\nIncreasing sales, revenue or sales. Anything related to directly increasing cashflow.\n\n**Survival**: Common aim for new businesses, simply focuses on keeping things going while they get started.\n\n**Profit**: Simply looking to earn more revenue than the sum of their costs. Increasing profit would allow greater wealth to the the business.\n\n**Sales**: To aim to sell a certain amount of a product, gives employees a common goal.\n\n**Market share**: To increase market share by a set percentage over the course of a year.\n\n**Security**: The entrepreneur being able to withdraw enough to be financially stable.\n\n#### Explain non-financial aims\n\n- Not usually linked to monetary success\n- Might be a solution to a social issue\n- Frequently personal to the founder(s)\n\n**Social**: Aims committing to act ethically. \n\n**Satisfaction**: The aim of turning a passion or a hobby into a business can often be a common start-up aim. \n\n**Challenge**: The challenge of starting something from scratch. Aiming to succeed on your own \u0026 with your own terms.\n\n**Control**: Having control over decisions made, your working pattern and the business direction.\n\n#### Suggest whether you believe non-financial aims are necessary for a profit-making business.\n\nYes, when people are going to give money to a business, they are likely to choose the most ethical option if it is financially viable to them. Therefore, businesses that have non-financial aims will be more inviting to new customers.\n\n#### Do you believe Lush has benefitted from having clear non-financial aims?\nYes, people knowing that no animal testing has occured makes them feel more comfortable when buying products from Lush. Things like this become a selling point and good publicity.\n\n#### Explain the reasons why businesses aims and objectives differ\n\nDifferent markets will have different problems and audiences, looking for different things. And as a business grows, it will need to update it's aims and objectives to remain competitive. It does not make sense for LEGO to aim to reduce animal testing - because they don't test on animals. Lush however has benefitted from that.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Business/Units/3.1/DifferentFormsOfBusiness":{"title":"Understanding Different Business Forms","content":"\nBusiness forms typically depend upon some of the following factors:\n\n- Business Objectives\n- Stakeholders\n- Shares \u0026 Shareholders\n- Organisational structure\n\n## Business Form Mapping\nThe private sector is any business that is owned by partners, owners or shareholders.\n\n![[sixth/Business/Units/3.1/img/Pasted image 20220915094507.png]]\n\n**Incorporated:** Private Limited Companies and Public Limited Companies\n\n**Unincorporated:** Sole Trader and Partnership\n\n## Business Research: Public Limited Companies\n\nA plc tends to be a fairly established business, as it costs ¬£50,000 to set up (at least) and therefore it is usually a reformed private limited company. Like a private limited company, plcs are owned by shareholders. However, there is a fundamental difference - as the shares of a public company are traded on the stock exchange and can be bought by anyone. This enables the raising of stock capital.\n\nThere are also more high level requirements placed on the business, as more documents must be published - including public accounts.\n\nThis means that anyone can own part of the business if they purchase shares. However, the effective owner of the business is the majority shareholder - if there is one. \n\nDecisions will be made by the executive employees (such as the CEO) and the board (made up of major shareholders). This only covers major decisions, as more minor decisions will still be covered by lower levels of management.\n\nHostile takeovers are a higher risk for public limited companies as anybody is capable of purchasing shares. The setup cost is high, and shareholders will all expect a cut of the profits.\n\nThe shareholders all have limited liability.\n\nA plc is usually a lot bigger than a standard ltd company.\n\nShareholders have ultimate control over the business - however the majority shareholder, if one exists, has complete control. (Anyone with more than 50% of shares.)\n\nHere are some Plcs:\n\n- Admiral Group Plc\n- Aviva Plc\n- BP Plc\n- British American Tobacco plc\n- National Grid\n- Pheonix Group Holdings plc\n- Shell plc\n- Tesco plc\n\n## Business Research: Private Limited Companies\n\nPrivate limited companies can be really small all the way up to a large business. It is the simplest way to form a limited liability company and it has fairly low costs and requirements.\n\nIt only costs ¬£25 to register the company and needs shares to be assigned (if that method is used - persons of signifcant control can also be assigned). A ltd company is typically owned by one (or few) people who set it up. Shares are typically only owned by people directly involved with the company - and share capital is not usually a main source of finance.\n\nWithin a private limited company, the decision making is usually more central than with the typically larger plc. This is because in a private limited company, management is typically much smaller, possibly consisting of a single person. Therefore, a ltd is going to run more like a dictatorship, as one person *could* definitely have complete control over everything.\n\n### Advantages:\n\n- owners have limited liability\n- individuals have the opportunity to become their own boss\n- new shareholders must be invited, preventing hostile takeover and divergence of interests.\n- shares can still be sold to raise money\n\n### Disadvantages:\n\n- there is frequently a lot of paperwork\n- sometimes financial information may end up being public\n- setup can be time consuming\n- the business may require professional help to manage finances\n\nControl is very central, as the owner of the business may choose to keep the whole organisation under their sole control, or delegate it as they choose.\n\nCorporation tax needs to be paid based on profits - meaning that the company may struggle to keep a positive balance.\n\nThe business is incorporated, and liability is limited - so the owners are protected from having their personal assets lost if something goes wrong with the business.\n\nPrivate limited companies tend to be smaller businesses, however there is no limit to the size of a ltd company - so some of them are very big. \n\n### Examples:\n\n- Contract West Limited\n- The Mill at Harvington Limited\n- Arrowtrack Limited\n- B Car Service Limited\n- Jacana Produce Limited\n- INEOS\n- Home Bargains\n- Thames Water\n- Radius Payment Solutions Ltd\n- Bet365\n\n## Business Research: Partnership\n\nA partnership is usually a smaller business, owned by a group of partners who usually all have specialisations in an area.\n\nWe frequently see partnerships operating as a firms such as solicitors, lawyers, dentists etc. The business is professional, but geared up to run at a relatively small scale.\n\n### Advantages:\n\n- deed of partnership can specify what profits each partner gets\n- they are quick and easy to setup\n- the owners have shared decision making\n- debt responsibility is split between owners\n\n### Disadvantages:\n- they can involve very long hours\n- conflict among owners can occur\n- there is the risk of unlimited liability\n- one partner may let the rest down if they don't uphold the standards of the business\n\nAll partners have shared control.\n\nFinance is provided by the partners, and profit is split between them. The \"deed of partnership\" denotes the specifics of this.\n\nThe business has unlimited liability - putting the partners at high risk.\n\nTypically, partnerships are small and do not grow much.\n\n### Examples:\n\n- JBW law\n- High Street dental practice\n- Merstow Green Medical Practice \n\n## Business Research: Sole Trader\nA sole trader is a common form of business where the owner of the business is the same legal entity as the business. They have unlimited liability, and fairly little legal protection. \n\nA sole trader is owned by a single person who runs the business.\n\nAll of the decision making is made by the singular owner.\n\n### Advantages\n- absolute control to the owner\n- still a legal business, can hire employees etc\n- lower turnover may remove VAT requirements\n\n### Disadvantages\n- unlimited liability\n- personal assets at risk\n\n---\n\nShareholders in **plc** and **ltd** companies can appoint a **Board of Directors** to make the decisions when it comes to running the business. The board appoints management staff of the business.\n\nEvery year, an annual general meeting (AGM) happens for any business. During this time, all shareholders may attend and vote to appoint the board of directors. Shareholder's influence over the vote is dictated by the percentage of shares that they own in the company.\n\nThe board typically aims to get a return on the shareholder's investments into the business.\n\nIn many smaller **ltd** companies, the same people will be shareholders, board members and senior managers in the organisation.\n\n---\n\n## Unincorporated vs Incorporated\n\n### Unincorporated\n- the owner **is** the business - no legal differences\n- owner has unlimited liability for business actions (including debt)\n- most unincorporated businesses operate as sole traders\n\n### Incorporated\n- legal difference between the business and the owners\n- owners/shareholders have limited liability\n- most incorporated businesses operate as private limited companies\n\n### Setting up a plc\n![[sixth/Business/Units/3.1/img/Pasted image 20220920140004.png]]\n### Setting up a ltd\n![[sixth/Business/Units/3.1/img/Pasted image 20220920140040.png]]\n\n---\nLimited companies have significantly more paperwork than unlimited companies. Accounts will be made public and avaliable for anyone who wants to access them, in a plc. Ltds will not have to have their accounts published.\n\nInvestors look for a return on their investment when they buy shares in a business. They would earn money back from dividends - or shares of the company profits.\n\nDividends can be paid annually or as interim dividends.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Business/Units/3.1/WhatIsABusiness":{"title":"What Is A Business?","content":"\n## Definitions\n\nA business is an organisation that exists to provide goods and services on a commercial basis to customers.\n\nGoods are physical products that can be traded.\n\nServices are intangible products, a task is fulfilled by a business to save someone without the time, expertise or the equipment the effort of sorting it out themselves.\n\nThey come in many different [forms](sixth/Business/Units/3.1/DifferentFormsOfBusiness)\n\n## Benefits to society\n- Sustain economy\n- Creates jobs\n- Increases consumer spending\n- Tax\n- Provide amenities\n- Drives innovation\n- Increased (international) investment\n\n\nBusiness's begin their corporate life as a startup, more information on startups can be found [here](sixth/Business/Units/3.1/WhatIsAStartUp)\n\n[Go home](/)\n","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Business/Units/3.1/WhatIsAStartUp":{"title":"What Is A Startup?","content":"\n**Key Term:** A start-up is a new business enterprise, formed by one or more entrepreneurs.\n\nEntrepreneur:\n\n- A catalyst for the creation and grwoth of a business\n- fulfill their dreams\n- calculated risk taker\n- organise all the resources\n- find and fill gaps in the market\n\n## Case Study: Olio\n\nAn app that deals with improving waste management in the modern world. \n\n- Part of the solution\n- about carbon footprint, ethics, net 0, level target\n- app - tackle waste by connecting neighbours\n- 30,000+ volunteers\n- Food in 21 minutes (people can send and receive food for free within this time)\n- Nonfood less than 2 hours (same as food, but for shampoo etc etc)\n- Founded by Tessa Clarke\n\n\nAims:\n\n- improve the app\n- B-B proposition\n- international expansion\n- 1 billion user by 2030 \n\nInvolving restaurants, supermarkets, food distributors to reach net 0 waste\n\n\n- 6 million users\n- Their aim is for their customers to be part of the solution, and not just contribute, as to make the system a whole lot stronger and to bring about awareness of food waste.\n\n**Key Term:** A mission is a qualitative statement of the business aims.\n\n**Key Term:** An aim is a long term plan from which objectives are derived.\n\n**Key Term:** An objective is a target which must be achieved in order to realise the stated aim. A time assigned target is derived from the goals and set in advanced of strategy.\n\nThe mission statement is the overriding goal of the business. The reason for the business's existence. A strategic perspective or a vision for the future. Excites, inspires, motivates and guides.\n\n\nContinued in [Business Objectives](sixth/Business/Units/3.1/BusinessObjectives)\n\n## Mission Statements Homework\n\n**1**: Netflix\n\u003e We promise our customers stellar service, our suppliers a valuable partner, our investors the prospects of sustained profitable growth, and our employees the allure of huge impact.\n\n**2**: McDonald's\n\u003eOur mission is to make delicious feel-good moments easy for everyone.\n\n**3**: Coca Cola\n\u003e to refresh the world in mind, body, and spirit, to inspire moments of optimism and happiness through our brands and actions, and to create value and make a difference.\n\n**4**: Google\n\u003eto organize the world‚Äôs information and make it universally accessible and useful.\n\n**5**: Amazon\n\u003eWe strive to offer our customers the lowest possible prices, the best available selection, and the utmost convenience.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.257854631Z","tags":null},"/sixth/Business/Units/3.2/CaseStudyPerfectPaper":{"title":"Case Study: Perfect Paper Plc","content":"\n## With reference to the Tannenbaum Schmidt continuum and Blake Mouton Grid, analyze what type of manager Jayne is. (9m)\n\nJayne has received instructions from her superiors and has made a decision to remedy the situation. However, when interacting with her employees, whilst she does listen to feedback she does not take it on board. To make this work, she likely has to compromise with her subordinates to keep morale up. This places Jayne on the **Task Manager** corner of the Blake Mouton Grid - giving her a significant focus on achieving goals above anything else. Jayne does not adapt her plans based on the requests of her employees. She is told that some staff may not be happy with travelling long distances (such as Scotland to London) for various reasons, including them being parents of young children. Whilst she does justify her decision as helping to prevent redundancies - she does not adapt it.\n\nIn a similar sense, she falls under the authoritarian segment of the tannenbaum schmidt continuum. This is because she has centralised the decision making process, and is giving very little control to the people who her decision will impact. \n\nThis does not make Jayne a bad manager, however it does mean people may not feel comfortable around her or taking their problems to her. But at the end of the day, Jayne is not trying to create a Paternalistic environment, all she is focused on is the results. If she can get good results, then her subordinates keep their jobs and everyone can be happy. Because of this, Jayne could be seen as a good manager, but one that works employees hard.\n\n\n## To what extent might a change in Jayne's leadership style improve sales volume? (16m)\n\nUnder her current style, she will be suppressing the creativity of her employees. This is because they will feel like they just have to follow her orders and do everything to the letter. As they are working in the sales team, creative freedom will allow for new ideas to come to fruition and will allow all 25 members of staff to benefit the team at a higher level. However, on the flip side, moving to a different model, such as the democratic one, would have other effects than increasing the diversity of ideas. Some people may be less productive with more freedom, and some of the ideas that the team comes up with may not work out. Luckily, with a greater range of ideas the team is more likely to have a few good ones - whereas previously they would have been stuck with trying to make a single idea work.\n\nIf Jayne were to take this to an extreme and take a more Laissez-faire approach to leadership, she would be taking a much higher risk, but also possibly looking at a much higher potential reward. As long as the team she is managing consists of skilled people whom are capable of working well indepndently from each other, then she should be able to increase productivity by taking a backseat on some of the decision making. \n\nDespite all the potential positives of a more relaxed management style, her current approach with her new plan may be just as, if not more, successful. Jayne is a good sales person, who has been promoted to her position for a reason - and therefore the company has trusted her to do a good job. Whilst sales have decreased since last year, this may not be reflective of sales efforts and simply due to an increasingly digital world. Jayne does have a plan, and as long as she can ensure her team executes it effectively - it should have some success. \n\nIn conclusion, Jayne may be perfectly fine where things are - and would be taking the least risk by changing nothing. However, moving towards greater employee freedom may be incredibly beneficial and boost productivity more than Jayne could manage under her authoritarian style. The problem with a new approach is that the outcome is unknown - so the risk is high.\n\n\n## Leadership Styles Research\n\n**McDonald's**: They have an effective leadership style, because staff working there are typically low skilled. So they delegate from a business manager to a general manager, and then down to shift managers who give instructions to the crew members. As you move higher up the ladder, it becomes less authoritarian as a higher skill level is assumed. This does cause some issues, but most of them are minor and can be easily resolved.\n\n**Nando's**: Managers are reportedly very imposing and stressed. They are not paid much more than the lowest level workers, but are given a lot more responsibility and are expected to run everything. This results in the managers not caring much for the business or their work and results in a more impoverished management style. Becuase of this there are employees who do not feel satisfied with the Nando's management style.\n\nA significant amount of data for this research was found on [Breakroom](https://breakroom.cc)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/Business/Units/3.2/LeadershipOrManagement":{"title":"Leadership or Management?","content":"\n**Leaders**: Inspire people, build relationships, take risks and have followers.\n\n**Managers**: Enact the plan, use their authority, manage risks, have subordinates\n\nBoth are closely linked and one person may have to do both roles.\n\n\u003e Management is doing things right; leadership is doing the right things - **Peter Drucker**\n\n## Traditional Levels of Management\n\n**Senior Management:** \n- Board of Directors\n- Set corporate objectives and strategic direction\n- Board is responsible for shareholders; led by the CEO\n\n**Middle Management:**\n- Accountable to senior management\n- Run business functions and departments\n\n**Junior Management:**\n- Supervisory role, accountable to middle management\n- Monitor and control day-to-day tasks, and manage teams of workers\n\n### Moving away from Autocratic Styles\n\nWhy is this happening?\n\n- Changes in society's values\n- Better educated workforce\n- Focus on need for soft HR skills\n- Changing workplace organisation\n- Greater workplace legislation\n- Pressure for greater employee involvement\n\n## Blake Mouton Managerial Grid\n\n![[sixth/Business/Units/3.2/img/Pasted image 20220913095215.png]]\n\nThe \"*Blake Mouton Managerial Grid*\" shows how management styles differ between the balance between a concern for people and concern for results.\n\nProduce or Perish Management is also called Task Management.\n\n### Impoverished Management\n\nLaissez-faire style; minimal effort on management; looking to avoid blame for errors. \n\nLow concern for people and task\n\n### Country Club Management\nFocus on creating safe, comfortable working environment with minimal conflict.\n\nHigh concern for people, low concern for task\n\n### Task Management\nAutocratic style, consistent with McGregor Theory X. Workers have to complete tasks - nothing else.\n\nLow concern for people, high concern for task.\n\n### Team Management\nStaff closely involved in decision-making and feel valued; consistent with McGregor Theory Y.\n\nHigh concern for both people and task.\n\n### Middle of the Road Management\nCompromises made to achieve acceptable performance; thought to be the less effective leadership style.\n\nMedium concern for people and task.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/Business/Units/3.2/LeadershipStyles":{"title":"Management and Leadership Styles","content":"\n**Authoritarian:** Absolute power to the boss, gives orders, does not delegate responsibility. Frequently used in highly regulated industries, low skilled jobs and areas where there is no time for debate (military, emergency services etc).\n\n**Paternalistic:** Guides and helps subordinates and acts as a fatherly/motherly figure for people. Tends to see staff as part of the family - lots of staff like this management style. Higher staff loyalty is genuinely a result of this. Businesses that are smaller and where the employees have a very close link with their manager frequently employ this management style.\n\n**Democratic:** Delegates most decision making to the group and doesn't directly order people to do much. Everything is fairly open and negotiable. Staff are typically highly skilled in jobs where this leadership style is employed.\n\n**Laissez-faire:** Very little care is taken, employees are told what to do and left to get on with it. Staff have to be very trusted and should know what they're doing for this to work.\n\nLeadership styles are important and should be considered by [new businesses](sixth/Business/Units/3.1/WhatIsAStartUp)\n\nThis is developed upon in [Management and Leadership](sixth/Business/Units/3.2/ManagementAndLeadership)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/Business/Units/3.2/ManagementAndLeadership":{"title":"Management and Leadership","content":"\n**Leadership**: A relationship through which one person influences the behaviour and actions of other people.\n\n## Leadership Skills\n\n- Confidence (Laissez-faire)\n- Perserverance \n- Decisive\n- Caring (Paternalistic)\n- Discipline (Authoirtarian)\n- Intelligence (EQ/IQ)\n- And many others\n\nDifferent kinds of leader [(leadership styles)](sixth/Business/Units/3.2/LeadershipStyles) will show different leadership skills to complement their style.\n\nThe traditional view of good leadership (Victorian) is that you will take *Command and Control* and be good at *Decision-making*. However, the more modern view is that a leader will:\n\n- inspire employees\n- create a vision\n- shape core values and culture\n- build effective teams\n\n\n## Tannenbaum and Schmidt\n\nA \"continuum of leadership\" that goes from complete authoritarianism to laissez-faire. \n\nAs you move along the continuum, it moves from the manager telling staff what to do to, them selling the idea and then the next section is consulting. When a manager asks employees about a decision for advice. The final stage is join - where the group makes a decision.\n\nThe extremes of the spectrum are Manager-centered leadership and subordinate centered leadership.\n\n![[sixth/Business/Units/3.2/img/Pasted image 20220912151118.png]]\n*Tell, sell, consult, joins*\n\n**Tells**: Leader identifies problems, makes decisions and announces to subordinates.\n\n**Sells**: Leader still makes decision, but attempts to overcome resistance through discussion and persuasion.\n\n**Consults**: Leader identifies problems and presents them to the group and listens to advice before making a final decision.\n\n**Joins**: Leader defines problems and leaves the staff to decide on a solution.\n\nTo compare, see [Leadership or Management](sixth/Business/Units/3.2/LeadershipOrManagement)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/BuildingBlocks":{"title":"Building Blocks","content":"\nAn algorithm is an unambiguous, repeatable set of instructions that can be followed to complete a given task in a finite time.\n\nProgramming is the process of converting an algorithm into computer code.\n\n## Building Blocks\n\n### Sequence\nA series of instructions that must be completed in order.\n\n### Iteration\nRepeating a sequence zero or more times.\n\n### Decision\nZero or one sequences that can be chosen from a range of options.\n\n\nA [plan](sixth/CompSci/Programming/Planning) is vital to producing a good program if it has any complexity.\n\n# Worksheet\n\nAn algorithm is an umabiguous, repeatable set of instructions that can be followed to complete a task in a finite time.   [*5/5*]\n\nSequence -\u003e To carry out a set of instructions in the order that they are given.\nDecision -\u003e To choose between, and perform, zero or one from a range of options.\nIteration -\u003e Repetition of a sequence of commands zero or more times. [*3/3*]\n\n**Definite iteration:** Iterating a set number of times, determinable without executing the algorithm.  ‚òë\n\n**Indefinite iteration:** Iterating an unset number of times, in programming this is usually shown as a while loop. The loop only ends when a condition is met, not when a task has been performed X times. ‚òë\n\n[*10/10*]\n\n## Exam Style Questions\n\n1. An algorithm is an unambiguous, repeatable set of instructions that can be followed to complete a given task in a finite time. [*2/2*]\n2. May run zero times. (TRUE about iteration) ‚òë\n3. There are 28 pupils in Miss Green's class. She would like to award each pupil a house point. What sort of iteration should be used?\n\nDefinite iteration would make sense, because we know how many pupils are in the class. In terms of programming, we can use a for loop to assign a house point to each pupil before the loop terminates. This allows us to perform a simple logical operation many times without having to write the logic out 28 different times. [*3/3*]\n\n\n[*15/15*]\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/LiteralsVariablesConstants":{"title":"Literals, Variables and Constants","content":"\n## Literals\nA literal is a directly defined value. ``\"25\"`` is a literal. So is `true`\n\nIn Python, this is an example of a literal:\n\n```py\nprint(5 + 3) \n```\n\nBoth 5 and 3 are literals in this context, because they are definied exactly where they are used.\n\n![[sixth/CompSci/Programming/img/Pasted image 20220908115725.png]]\n\n## Variables\nA variable is an object with an assigned value that can be referenced elsewhere in the program. It is useful for dynamically updating a value.\n\n`bobAge = 50` is a variable.\n\n![[sixth/CompSci/Programming/img/Pasted image 20220908115815.png]]\n\nNaming conventions should be followed when naming variables to prevent misunderstandings.\n\nIf your variable is called `penisland` there may be issues with people not reading Pen Island.\n\nSo naming a variable `pen_island` would be better. This is what PEP8 recommends, and is therefore the best option for naming variables in Python (if you want people to like you).\n\nConventional naming would be `penIsland` though. Camelcase means the first word of a variable is lowercase and then all additional words in the name should start with a capital.\n\n\u003e [!note] Note\n\u003e\n\u003e Variable names can also be called an identifier.\n\n## Constants\nA constant is a variable that CANNOT be changed after definition. The idea of a constant is to define a reused value once at one point in the code, and then allow for it to be used everywhere. if you want to change the speed of the player in your game, you can change the constant at first definition, avoiding a huge amount of refactoring.\n\n\u003e [!bug] Python does not support constants natively\n\u003e\n\u003e Instead, use a fully capitalised variable name and do not change it. This method is flawed, but it's the best one avaliable.\n \n\n`SPEED = 5.0`\n\n![[sixth/CompSci/Programming/img/Pasted image 20220908115902.png]]\n\nThe next page is [subroutines](sixth/CompSci/Programming/Subroutines)\n\n\n[Go home](/)\n\n","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/Modules":{"title":"Modules","content":"\n## Importing a module\n\nUsing the `import` keyword, you can bring a module into your code. You can then call any subroutines included within that module, in your code.\n\nHere's an example using the `random` module:\n\n```py\nimport random\n\nmyNum = random.randint(0,10)\nprint(myNum)\n```\n\nEvery time you run this script, it will print out an integer between 0 and 10.\n\n## Installing modules\n\nUsing `pip` you can install a Python module from the repositories. \n\nSimply run the command `pip install module-name` to download a module. You can then import it into your program and use it.\n\n[PyPi](https://pypi.org/)\n\n## Making a module\n\nMake a new python file with the following content\n\n```py\ndef say_hi(first_name):\n\tprint(f\"Hi, {first_name}\")\n```\n\n\nThen save this in the folder that you wish to call the module from - *or the Python module library to call anywhere.*\n\nIf you called this file `hello.py` then you can import it using `import hello` and call the procedure it includes using `hello.say_hi(\"Bob\")`.\n\n![[sixth/CompSci/Programming/img/Pasted image 20220913105509.png]]\n*Code to import and call*\n\nAnd here is the output:\n\n![[sixth/CompSci/Programming/img/Pasted image 20220913105612.png]]\n\n\u003e [!tip] Hint \n\u003e\n\u003e Make sure you've saved both files in the same folder, otherwise this won't work. Additionally, you can save the file you want to import in your Python path or environment, with the core libraries. (Or add your modules folder to your PATH variable)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/Planning":{"title":"Planning","content":"\nTaking time to think through what we intend to do will nearly always raise questions and usually helps you to understand the full scale of the problem that you are trying to solve.\n\n## Methodologies\n\n### Waterfall\n\n![[sixth/CompSci/Programming/img/Pasted image 20220914121626.png]]\nWaterfall is flexible because you can go up or down the chain as needed. \n\n### Lifecycle/Agile\n![[sixth/CompSci/Programming/img/Pasted image 20220914121746.png]]\nA large project may use multiple instances of the agile pan to work on subprojects. It's also possible to cycle around if an issue is found.\n\nMore subject to issues than Waterfall, as waterfall allows for queries to go back up the chain.\n\n### Scrum\n\n![[sixth/CompSci/Programming/img/Pasted image 20220914122207.png]]\n\nContinuous reviews of the project result in faster problem detection and resolution. Scrum immitates a much more natural working style. Sprints are used to focus on getting things finished bit by bit and allow everybody to stay on schedule.\n\n### Flowcharts\n\n![[sixth/CompSci/Programming/img/Pasted image 20220914123033.png]]\n\nA diagram that explains the flow of a program.\n\nShapes represent actions that must be perfomed.\n\nThe shapes are connected together with arrows - defining the flow route.\n\nFlowcharts are much easier for the layman to understand.\n\nThe shapes all represent a specific action. In a flowchart, the shape is important. The key is shown below:\n\n![[sixth/CompSci/Programming/img/Pasted image 20220914123717.png]]\n\n### Pseudo Code\n\nLaid out roughly like code, with some form of uniform syntax. HOWEVER - there is not set syntax rules and ideas can be expressed more freely.\n\nIt is more natural for programmers to work with pseudo code than any of the other methods.\n\nNo rules as such, but it is conventional to declare the end of an IF, WHILE or something else.\n\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/Programming":{"title":"Programming","content":"\nAlgorithms are instructions.\n\nComputer process instructions.\n\nProgramming is the process of turning algorithms into instructions that can be followed by a computer.\n\nInstructions are binary codes that represent the operations that the computer can perform.\n\nSo `0001` could be ADD and `0010` could be SHIFT.\n\nEach type of computer has its own set of instructions - creatively called an instruction set, examples of these include x86 and ARM.\n\n## Programming Languages\n\n### 1st Generation\n- Machine code\n- Binary\n\t- Eg - 0001010 could be the code for `ADD` on your processor.\n\n### 2nd Generation\n- Assembly code\n- One-to-one equivalence to machine code\n\t- We would use a command word like `ADD` instead of a binary representation, because it is easier to remember\n\n### 3rd Generation (or high level)\n- High level languages are portable\n\t- They will run on different platforms (such as Linux x86 and Android ARM)\n- They are natural-like\n\t- A single high level instruction (such as `print`) would turn into many low level instructions.\n\nIn 1st and 2nd generation languages (the low level languages) the programmer needs to know and think about how the computer works.\n\nWith 3rd generation/ high level languages - the programmer focuses on solving the problem more than on how the computer works.\n\n\n### Low level languages\nAlways called:\n\n- Machine code: the binary codes that instruct the computer on what to do.\n- Assembly code: the code word equivalent of machine code\n- Sometimes they may include the chipset, eg x86 machine code.\n\n### High level languages\nUsually referred to by the language name:\n- Python, C, Basic, Pearl, PHP, Java, C++, C#, JavaScript, HTML etc etc etc\n\n#### Why so many?\n- Different languages have different strengths and weaknesses\n- Some are compiled, some are interpreted.\n- Some are focused on particular applications, such as business, engineering or games etc.\n\n## Rosetta Code\nA stone was discovered holding the \"Rosetta code\" which includes a message in 3 different languages, 1 of which was hieroglyphs. We couldn't understand hieroglyphs until we found this stone, however once we used the Rosetta code to translate the message on the stone, we managed to crack hieroglyphs.\n\nSimilarly, the website [RosettaCode.org](https://rosettacode.org/wiki/Rosetta_Code) allows you to compare programming languages similarly. It has solutions to different tasks in many different languages.\n\n\n## Translators\n\n- Source code **needs** to be translated into object code.\n- Object code is combined with other object code to create machine code before it can run.\n\t- Examples of object code could be other translated source code or standard libraries provided with languages.\n\n| **Source Code** | _Machine Code_ | _Assembly Code_ | _High Level Code_                                      |\n| --------------- | -------------- | --------------- | ------------------------------------------------------ |\n| **Translate**   | N/A            | Assembler       | Compiler / Interpreter                                 |\n| **Combine**     | Linker         | Linker          | Linker (usually automated) Interpreter bypasses linker |\n| **Executable**  | Machine Code   | Machine Code    | Machine Code                                           |\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/StateMachines":{"title":"State Machines","content":"\n## Finite State Machines\n An FSM shows the states in which a system can exist, what causes the system to move from one state to another, and what outputs or changes the transition causes.\n\nThe system must have a known (finite) number of states.\n\n![[sixth/CompSci/Programming/img/Pasted image 20220920143733.png]]\n\nFSMs can be converted into a circuit, meaning that they can be used to control things such as traffic lights without the need for actual code.\n\n![[sixth/CompSci/Programming/img/Pasted image 20220920145051.png]]\nStates are connected by transitions (arrows). Transitions should be labelled with the trigger for the transition.\n\nThey can be useful for debugging an algorithm or representing it in a way that people who don't work with code will be able to understand more easily. Start can be indicated with an -\u003e coming from nothing.\n\n\n![[sixth/CompSci/Programming/img/doorbell.drawio.png]]\n\n---\n## Mealy vs Moore Machine\n\n### Mealy Machine\nThe output is determined by its current state and current inputs.\n\n### Moore Machine\nThe output is determined solely by the current state.\n\n\n\n## State Transition Table\n\nA state transition table shows the current state, the input that is received, the state to move to (next state) and any output produced in the process.\n\nEg\n\n![[sixth/CompSci/Programming/img/mooremealy.png]]\n\n\n| Current State | Input | Next State |\n|---------------|-------|------------|\n| Se            | 0     | Se         |\n| Se            | 1     | So         |\n| So            | 0     | So         |\n| Se            | 1     | Se         |\n\n\n\n### Producing a table\n\n![[sixth/CompSci/Programming/img/haveago.png]]\n\n\n\n| Current State | Input | Next State |\n|---------------|-------|------------|\n| S0            | a     | S1         |\n| S1            | b     | S2         |\n| S2            | c     | S1         |\n| S1            | b     | S2         |\n| S2            | a,b   | S3         |\n| S3            | -     | -          |\n| S0            | c     | S0         |\n| S0            | b     | S3         |\n\n\n## State Transition Practice\n\n\t![[sixth/CompSci/Programming/img/transitionpractice.png]]\n\n| Current State | Input             | Next State |\n|---------------|-------------------|------------|\n| S1            | I                 | S2         |\n| S2            | P                 | S3         |\n| S3            | 1\\|2\\|3\\|4        | S4         |\n| S4            | Numeric Digit     | S6         |\n| S6            | Numeric Digit     | S7         |\n| S7            | Letter            | S9         |\n| S9            | Letter            | S11        |\n| S11           | -                 | -          |\n|               |                   |            |\n| S1            | I                 | S2         |\n| S2            | Letter (except P) | S13        |\n| S13           | Numeric Digit     | S16        |\n| S16           | Numeric Digit     | S17        |\n| S17           | Letter            | S19        |\n| S19           | Letter            | S21        |\n| S21           | -                 | -          |\n|               |                   |            |\n| S1            | Letter (except I) | S14        |\n| S14           | Numeric Digit     | S16        |\n| S16           | Letter            | S22        |\n| S22           | Numeric Digit     | S23        |\n| S23           | Letter            | S19        |\n| S19           | Letter            | S21        |\n| S21           | Any character     | S12        |\n| S12           | Any character     | S12        |\n* Not all possible routes are listed in the above table\n\n## Flowchart, Pseudo Code of Finite State Machine?\n\n- Flowcharts are a great way to present information to non-specialists\n- Pseudo code is great if your audience are programmers\n- Finite State Machines are best suited to control systems\n\n## Natural Languages vs Formal Languages\n\nA natural language is your typical-spoken language - English or Spanish are good examples. They are ambiguous and can be interpreted in multiple ways.\n\nWhereas a formal language is like a formula in maths or science and programming languages. It can only be interpreted in a single way and is very rigid.\n\n\n### Algorithms\n\nTypically, an algorithm will use a formal language (or will be much closer to formal than natural). A recipe is an example of an algorithm that can be represented using natural languages, with a more formal structure. A recipe can be misinterpreted, a program cannot.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/Subroutines":{"title":"Subroutines","content":"\nInstead of writing a huge, monolithic piece of code, you can break a program down into smaller pieces, called subroutines. These allow for increased modularity in an application. It also makes it much easier to work on a project with multiple people involved because they can each write subroutines to work together and produce a complex system quickly.\n\nIt is much easier to solve a problem by breaking it down into subroutines.\n\nAll subroutines are reusable, meaning that if you write a utility to authenticate a user, you can call the same subroutine from multiple places, keeping code tidy and reducing time-wasting.\n\nHere is an example subroutine written in Python:\n\n```py\n# Define the subroutine\ndef AddNum(num1,num2):\n    return (num1+num2)\n\n# Call the subroutine\naddition = AddNum(1,2)\nprint(addition)\n```\n\nWhen this code is executed, it will return the literal `3`. This is because we pass the values `1` and `2` to the subroutine, which then adds them together. The answer is printed out because we save the result in a variable and then display it with the `print` command.\n\nHere is a demonstration of the program being executed:\n\n![[sixth/CompSci/Programming/img/Pasted image 20220908123946.png]]\n\nTaking this a step further, we could ask the user to pick the values to add together. We would do this using the following code:\n\n```py\n# Define the subroutine\ndef AddNum(num1,num2):\n    return (num1+num2)\n\n# This could be more efficient, and will crash if we enter an invalid input.\nnum1 = int(input(\"Enter num1: \"))\nnum2 = int(input(\"Enter num2: \"))\n\n\n# Call the subroutine\naddition = AddNum(num1,num2)\nprint(addition)\n```\n\nAnd the result looks like this when we run it:\n\n![[sixth/CompSci/Programming/img/Pasted image 20220908124522.png]]\n\n## Types of subroutine\n\n\u003e [!abstract] In terms of Python\n\u003e\n\u003e The following uses Python keywords as examples, but the same logic can be applied to any language.\n\nBecause this code uses the `return` keyword, it is a **function**.\n\nThe other type of subroutine is a **procedure**, this would not use the `return` keyword.\n\nA procedure does not return any value to the logic that called it, whereas a function does. This is the only difference between the two types.\n\nA function would typically be used where a response is needed or the status of the action needs verifying. If you do not need an answer, then a procedure may be the best choice.\n\nSubroutines are made out of the basic [building blocks](sixth/CompSci/Programming/BuildingBlocks) found here.\n\n## Task: Write a subroutine\n\nA procedure that:\n- Receive a person's name\n- Adds \"from PHHS\" to the name\n- Prints the product\n- Ends\n\n```py\ndef FromPHHS(name):\n\tprint(name+\" from PHHS\")\n```\n\nNext, a function to convert celsius to fahrenheit:\n\n```py\ndef CelToFaren(celsius):\n\tfahren = celsius * 1.8 + 32\n\treturn fahren\n```\n\n\u003e [!info] Identifiers\n\u003e\n\u003eJust like with variables, the name of a subroutine is officially called an identifier. Also - just like with variables - the identifier should be descriptive as it improves code readability.\n\nTo extend the functionality of a subroutine (or any of your code), modules are very useful. Find out more [here](sixth/CompSci/Programming/Modules)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Programming/ValuesExpressionsAndStatements":{"title":"Values, Expressions and Statements","content":"\n\n## Value\nA **value** is a single piece of data.  It can be used as a [literal](sixth/CompSci/Programming/LiteralsVariablesConstants) or stored in a variable.\n\nExamples:\n\n- 45\n- \"Liam\"\n- True\n- 64.52\n- [\"apple\", \"kiwi\", \"pear\"]\n\nVariables can *only* contain values. So if it is contained within a variable - it is a value.\n\n---\n## Expression\nAn **expression** is an operation of values and/or variables that will result in a value.\n\nTypically, you get a different value output than the input - as you are performing a mathematical operation usually (and most of the time you won't  be doing a * 1 operation).\n\nExamples:\n\n- 32 * 4\n- 15 - 2\n- 43 / 7\n- 3 == 5\n- \"hello\" + \"world\"\n- 4 \u003e 2\n- \"hello\" * 4\n- input(\"What is your name? \") * 6\n- ((12 * 6) /4 ) + 8\n\nExpressions are used to modify or compare values. They may contain a function call (ie, `int(3.4) * 5` is still an expression).\n\nData Types do matter in expressions - so whilst you can multiply a string by an integer, you cannot divide a string by an integer.\n\nSo `Bob * 4` is valid and results in \"BobBobBobBob\"\n\nBut `Bob / 2` is not valid and will return an error.\n\nA division operation will **always** return a float - even if the inputs were integers.\n\n---\n## Statement\nA **statement** is any valid fragment of code. (A command, any line of code etc).\n\nExamples:\n\n- print(\"Hello world\")\n- import random\n- 25 == 30\n- if int(age) == 30:\n\n\n\n\n---\n\u003e [!question] Multiple types \n\u003e\n\u003eSomething can be or contain multiple types. So a statement may contain an expression which may then contain a value.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.261854652Z","tags":null},"/sixth/CompSci/Theory/DataRepFundamentals":{"title":"Data Representation Fundamentals and Maths","content":"\n## Types of numbers\n\n### Natural Numbers\nWhole, integer numbers used for counting. It is an infinite set of numbers - including zero. \n\nùëµ = {0,1,2,3}\n\n### Integers\nNatural numbers, including negatives.\n\nùêô= {-3,-2,0,1}\n\n### Rational Numbers\n\nAny value that can be represented as a fraction or ratio is called a rational number.\n\nRecurring numbers like 0.333333.... are also rational, as they can be represented as a fraction (1/3)\n\nIncludes integers.\n\nThey are represented with Q.\n\n### Irrational Numbers\n\nCannot be represented using a finite number of digits or fractions.\n\n### Real Numbers\n\nDenote the set of natural numbers, irrational numbers and rational numbers.\n\nRepresented using the letter R.\n\nImaginary numbers such as infinity are not real numbers.\n\nReal numbers are used for measurement.\n\n### Ordinal Numbers\nUsed to indicate the position of an item.\n\nFor example: first, second, third etc etc\n\nThey are used in array pointers.\n\nCharacters in a string can be numbered using ordinal numbers.\n\n### Sets (Finite)\nAn unordered collection of values and symbols where no value or symbol occurs more than once. \n\nA set is denoted using A \n\nA finite set consists of a number of elements that can be counted using natural numbers.\n\nCardinality denotes the number of elements in a set.\n\nFor example, chess pieces are a set.\n\n### Sets (Infinite)\n\nAn infinite set may be countable or uncountable.\n\n\n#### Solving a set \n\nA = {2,4,6,8,10,12}\nB = {3,6,9,12}\nC = {4,8,12}\n\nA‚à™B‚à™C = {2,3,4,6,8,9,10,12}\n\n`‚à™` is the symbol for union.\n\n### Empty Set\nConsidering sets A = {1,3,5,7} and B = {2,4}\n\nThe intersection of two sets represents the common elements in both the sets.\n\nIn this case, there are no common elements, therefore the intersection of sets A and B is represeted as A N B = …∏\n\n…∏ = null\n…∏ is phi\n\n### Defining sets\n A set can be represented using set comprehension.\nThe vertical bar (|) represents \"such that\" and the symbol ùê∏ denoted \"belongs to\" or \"is a member of\". The symbol ^ denotes and operation.\n\n### Cardinality of sets\n\nA = {ùë• ùê∏ ùêô | -2 \u003c ùë• \u003c 7}\n\n### Subsets and Supersets\nIf every member of A is also present in B, then A is a subset of B. This relationship is also represented as:\n\nA ‚äÜ B\n\nA super set would be \n\nA ‚äÉ B\n![[sixth/CompSci/Theory/img/Pasted image 20220915111406.png]]\n\nThink of substrings, sublists etc\n\n### Cartesian Products\n\nThe cartesian product of two sets (P and Q) is written as P x Q and consists of ordered pairs (p,q) where p is a member of set P and q is a member of set Q.\n\nFor example, P = {1,3,5,7} and Q = {2,4}, then P x Q = {(1,2), (1,4), (3,2), (3,4), (5,2), (5,4), (7,2), (7,4)}\n\nUsed in substrings where there is a set of rules to give the total number of combinations possible. Useful for choosing a scheme for a billion user social site.\n\n### Union\n\nAn OR operation between two sets results in the union (‚à™) of both sets.\n\n### Intersection\n\nThe similarities between two sets\n\n### Difference\n\nA / B represents the difference between A and B\n\n### Symmetric Difference/ Disjunctive Union\n\nThe resulting set consists of elements that are in either set but not in their intersection. \n\nA Œî B\n\n\n[Storing this as binary](sixth/CompSci/Theory/NumberBases)\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.285854778Z","tags":null},"/sixth/CompSci/Theory/NumberBases":{"title":"Number Bases","content":"\nA computer stores data in switches, represented as 1 or 0, on or off.\n\n## Size of computer memory\n\nA Binary digit is a bit.\n\nA nibble is 4 bits.\n\nA byte is 8 bits.\n\nA byte is the smallest unit of memory in a computer system.\n\nMemory sizes were originally base 2.\n\nIn this system, the prefixes kibi-, mebi-, gibi-, tebi- are used to avoid conflicts with the base 10 system.\n\nThis is now used for representing the size of RAM modules only.\n\n1 kibibyte (kiB) = 1024 bytes\n1 mebibyte (miB) = 1024^2 bytes\n1 gibibyte (GiB)= 1024^3 bytes\n1 tebibyte (TiB) = 1024^4 bytes\n\nAfter the standarisation of base 10 representation, memory sizes are now given as base 10.\n\n1 kilobyte (kB) = 1000 bytes\n1 megabyte (MB) = 1000 kilobytes\n1 gigabyte (GB) = 1000MB\n1 terabyte (TB) = 1000GB\n1 petabyte (PB) = 1000TB\n\n## Converting denary to binary\n\nDivide the number by 2, write down the remainder.\n\nContinue dividing the quotients by 2 and write down the remainder.\n\nList all the remainders in reverse order.\n\nSo if I have 10:\n\n```\n16  8  4  2  1 \nCannot take 16 from 10\nfirst column = 0\nCan take 8 from 10\nsecond column = 1\nremaining is 2\ncannot take 2 from 4\nthird column = 0\ncan take 2 from 2 \nfourth column = 1\nnothing left, final column = 0\n```\n\nBinary number = 01010\n\n## Binary combinations\n\nA one-bit system has a one-place value. And 3-bit has three place values, which allows for 8 possible combinations.\n\n## Representing numbers\n\nA 16-bit system can represent integers up to 2^16\n\n8-bit, 16-bit, 32-bit and 64-bit are the most common bit lengths or word lengths.\n\n## üéâ Quiz\n1) What is the difference between the binary and denary system?\n- The denary system has a base value of 10, whereas the binary system has a base value of 2. ‚úÖ\n2) Which of the following binary numbers represent the denary number 14?\n- 1101 ‚úÖ\n3) What is the denary equivalent of the binary number 0101?\n- 5 ‚úÖ\n4) How many number of bits is present in 1 GiB?\n- 8 x 20^30 bits ‚úÖ\n5) How many number of bytes is present in 1 TiB?\n- 1024^4 bytes ‚úÖ\n6) What is the binary equivalent of the denary number 47?\n- 00101111 ‚úÖ\n7) How many binary combinations are possible in a 5-bit system?\n- 2^5 (32) ‚úÖ\n8) What number does an odd number end with when represented in the binary system?\n- 1 ‚úÖ\n9) An 8-bit system can represent up to what integer?\n- 255 ‚úÖ\n10) What is the sum of 1011 and 0010?\n- 1101 ‚úÖ\n11) What is the denary equivalent for the binary number 1101?\n- 13 ‚úÖ\n12) What is denary equivalent for the binary number 11001?\n- 25 ‚úÖ\n13) What is the denary equivalent of the binary number 10111011?\n- 187 ‚úÖ\n\n## Overflow Errors\nA CPU with an 8-bit register has a capacity of up to 111111111 in binary. If an extra bit is added, we get an overflow error.\n\nThe number of bits a register can hold is called the word size. Exceeding the capacity of the word size will cause a failure with an overflow error.\n\nSometimes you will get a wrong number, or you may get a system issue where the computer fetches something else from RAM - issuing random commands. \n\n## Binary Shifts for Multiplication\nShifting the number 132 to the left is effectively multiplying it by 2, resulting in the value of 264.\n\n## Binary Shifts for Division\nShifting the number 171 right will divide to 85 - which is incorrect because 85.5 would be the exact answer. This is why we need floating point handling.\n\nCircular right shifts exist to maintain number length in binary representation. So when shifting right, a zero will be moved to the leftmost part of the number. \n\nA larger number can be stored across multiple numbers. So a 16-bit number can be stored across 2 8-bit registers.\n\nTo divide a 16-bit number by 2 in an 8-bit processor:\n\n- Shift the contents of Reg A to the right\n- Perform a circular right shift in Reg B\n\nThere is a Carry Bit - which is a seperate part of memory where we can hold a bit for carrying operations.\n\n---\n## Recall\n1) 2^5-1 = 31 (32 total numbers)\n2) 98 -\u003e 8 bit bin\n01100100\n3) 01100110 -\u003e den\n102\n4) 00100100 * 6 \n11011000\n5) 11001100/8\n00110011 *(inc)*\n\n\n## Bitwise Operations\nThe logic operations are:\n\n- NOT: Complements the binary value\n- AND: Produces the output '1' only when both inputs are '1'\n- OR: Produces output '1' when at least 1 of the outputs is '1'\n- XOR: Produces output '1' when both the outputs are different, otherwise produces '0'\n\n## Representing negative numbers in binary\nSign and magnitude are combined to make a binary number that can be positive (+) or negative (-).\n\n12:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 0 | 0  | 0  | 0  | 1 | 1 | 0 | 0 |\n39:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 0 | 0  | 1  | 0  | 0 | 1 | 1 | 1 |\n96:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 0 | 1  | 1  | 0  | 0 | 0 | 0 | 0 |\n85:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 0 | 1  | 0  | 1  | 0 | 0 | 1 | 1 |\n127:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 0 | 1  | 1  | 1  | 1 | 1 | 1 | 1 |\n\n-12:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 1 | 0  | 0  | 0  | 1 | 1 | 0 | 0 |\n\n-39:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 1 | 0  | 1  | 0  | 0 | 1 | 1 | 1 |\n\n-96:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 1 | 1  | 1  | 0  | 0 | 0 | 0 | 0 |\n\n-85:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 1 | 1  | 0  | 1  | 0 | 0 | 1 | 1 |\n\n-127:\n| SIGN    | 64 | 32 | 16 | 8 | 4 | 2 | 1 |\n|---------|----|----|----|---|---|---|---|\n| 1 | 1  | 1  | 1  | 1 | 1 | 1 | 1 |\n\n## Finding Two's Complement\n- Finding two's complement is an alternative method to represent negative numbers\n- Most computers use this method to perform mathematical operations\n\n0101\nÀØ\n1011\n\n- Work right to left\n\n- Leave first one untouched\n\n- Invert all additional characters\n\n+102\n\n011000000\nÀØ\n10000000\n\n+63\n0111111\nÀØ\n1100001\n\n+127\n1111111\nÀØ\n10000001\n\n-102\n\n\nWhen dealing with Two's Complement, the overflow bit should always be discarded.\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.285854778Z","tags":null},"/sixth/CompSci/Theory/NumberSystems":{"title":"Number Systems","content":"\n## Number Systems\nWe typically use the denary number system, where everything is based on 10, but computers work in binary, where everything is base 2.\n\nSo denary looks like:\n\n1 -\u003e 10 -\u003e 100 -\u003e 1000\n\nAnd binary digits represent:\n\n1 -\u003e 2 -\u003e 4 -\u003e 8 -\u003e 16 -\u003e 32 -\u003e 64 -\u003e 128 -\u003e 256\n\n\nThe binary number 10100 is equivalent to denary 20.\n\nAnd 01111111 is 127\n\n## Conversion Practice\n\n64 -\u003e Binary\n\n=01000000\n\n\n130 -\u003e Binary\n\n\n= 10000010\n\n\n255 -\u003e Binary\n\n= 11111111\n\n\n196 -\u003e Binary\n\n= 0110000100\n\n\n## Handling negatives\n\nBCD is a primitive method for handling negatives, but it is unused because it is slow and inefficient in terms of resource utilization.\n\nSo instead we use a **sign bit**, where we make the largest column in the binary pattern an indicator for whether or not the number is *positive* or *negative*.\n\nSo you would replace the heading:\n\n128 - 64 - 32 - 16 - 8 - 4 - 2 - 1\n\nWith:\n\nSign - 64 - 32 - 16 - 8 - 4 - 2 - 1\n\nThis limits the range of numbers that can be stored, but can be applied to larger binary patterns too.\n\nThe main method used is [Two's Complement](sixth/CompSci/Theory/TwosComplement)\n\n## Binary Task\n\n### Converting binary to denary\n\n14 -\u003e Bin\n\n64 -\u003e 32 -\u003e 16 -\u003e 8 -\u003e 4 -\u003e 2 -\u003e 1\n0 -\u003e 0 -\u003e      0 -\u003e  1  -\u003e 1 -\u003e 1  -\u003e 0\n\n= 0001110\n\n60 -\u003e Bin\n\n64 -\u003e 32 -\u003e 16 -\u003e 8 -\u003e 4 -\u003e 2 -\u003e 1\n0  -\u003e   1    -\u003e 1  -\u003e 1  -\u003e 1   -\u003e 0  -\u003e 0\n\n= 0111100\n\n200 -\u003e Bin\n\n128 -\u003e 64 -\u003e 32 -\u003e 16 -\u003e 8 -\u003e 4 -\u003e 2 -\u003e 1\n1  -\u003e     1    -\u003e 0   -\u003e  0  -\u003e 1  -\u003e 0 -\u003e 0 -\u003e 0\n\n= 11001000\n\n### Binary Arithmetic\n\n56 + 32 = 88\n\n64 -\u003e 32 -\u003e 16 -\u003e 8 -\u003e 4 -\u003e 2 -\u003e 1\n0 -\u003e    1   -\u003e 1   -\u003e 1 -\u003e 0 -\u003e 0 -\u003e 0\n\n56 = 0111000\n\n64 -\u003e 32 -\u003e 16 -\u003e 8 -\u003e 4 -\u003e 2 -\u003e 1\n0100000\n\n0111000\n0100000\n\n+\n\n1111000\n\nAdvanced numbers and mathematical systems are explained [here](sixth/CompSci/Theory/DataRepFundamentals)\n\n\n[Go home](/) ","lastmodified":"2022-09-23T13:19:45.285854778Z","tags":null},"/sixth/CompSci/Theory/TwosComplement":{"title":"Two's Complement","content":"\n**This document is incomplete.**\n\nTwo's complement is a system that allows a binary number to be reversibly converted into a number with an equivalent value but negative.\n\n## The process\n\nTo use Two's complement, you must:\n\n- invert (flip all the bits)\n- add a place value of 1 to the inverted number\n\n\nFurther details: (https://en.wikipedia.org/wiki/Two%27s_complement#Converting_to_two's_complement_representation)\n\n\n\n[Go home](/)","lastmodified":"2022-09-23T13:19:45.285854778Z","tags":null}}