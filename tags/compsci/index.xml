<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>compsci on</title><link>https://sethmb.xyz/tags/compsci/</link><description>Recent content in compsci on</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://sethmb.xyz/tags/compsci/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Blocks</title><link>https://sethmb.xyz/sixth/CompSci/Programming/BuildingBlocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/BuildingBlocks/</guid><description>An algorithm is an unambiguous, repeatable set of instructions that can be followed to complete a given task in a finite time.</description></item><item><title>Data Representation Fundamentals and Maths</title><link>https://sethmb.xyz/sixth/CompSci/Theory/DataRepFundamentals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Theory/DataRepFundamentals/</guid><description>Types of numbers Natural Numbers Whole, integer numbers used for counting. It is an infinite set of numbers - including zero.</description></item><item><title>Hex</title><link>https://sethmb.xyz/sixth/CompSci/Theory/Hex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Theory/Hex/</guid><description>Recall: Two&amp;rsquo;s Complement -20 10100
010100 101011
101100
-32 100000 0100000 1011111 110000
-20 + 16 101100c
10000 010000</description></item><item><title>Literals, Variables and Constants</title><link>https://sethmb.xyz/sixth/CompSci/Programming/LiteralsVariablesConstants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/LiteralsVariablesConstants/</guid><description>Literals A literal is a directly defined value. &amp;quot;25&amp;quot; is a literal. So is true
In Python, this is an example of a literal:</description></item><item><title>Modules</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Modules/</guid><description>Importing a module Using the import keyword, you can bring a module into your code. You can then call any subroutines included within that module, in your code.</description></item><item><title>Number Bases</title><link>https://sethmb.xyz/sixth/CompSci/Theory/NumberBases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Theory/NumberBases/</guid><description>A computer stores data in switches, represented as 1 or 0, on or off.
Size of computer memory A Binary digit is a bit.</description></item><item><title>Number Systems</title><link>https://sethmb.xyz/sixth/CompSci/Theory/NumberSystems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Theory/NumberSystems/</guid><description>Number Systems We typically use the denary number system, where everything is based on 10, but computers work in binary, where everything is base 2.</description></item><item><title>Planning</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Planning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Planning/</guid><description>Taking time to think through what we intend to do will nearly always raise questions and usually helps you to understand the full scale of the problem that you are trying to solve.</description></item><item><title>Programming</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Programming/</guid><description>Algorithms are instructions.
Computer process instructions.
Programming is the process of turning algorithms into instructions that can be followed by a computer.</description></item><item><title>State Machines</title><link>https://sethmb.xyz/sixth/CompSci/Programming/StateMachines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/StateMachines/</guid><description>Finite State Machines An FSM shows the states in which a system can exist, what causes the system to move from one state to another, and what outputs or changes the transition causes.</description></item><item><title>Subroutines</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Subroutines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Subroutines/</guid><description>Instead of writing a huge, monolithic piece of code, you can break a program down into smaller pieces, called subroutines. These allow for increased modularity in an application.</description></item><item><title>Two's Complement</title><link>https://sethmb.xyz/sixth/CompSci/Theory/TwosComplement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Theory/TwosComplement/</guid><description>Two&amp;rsquo;s complement is a system that allows a binary number to be reversibly converted into a number with an equivalent value but negative.</description></item><item><title>Values, Expressions and Statements</title><link>https://sethmb.xyz/sixth/CompSci/Programming/ValuesExpressionsAndStatements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/ValuesExpressionsAndStatements/</guid><description>Value A value is a single piece of data. It can be used as a literal or stored in a variable.</description></item></channel></rss>