<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>compsci on</title><link>https://sethmb.xyz/tags/compsci/</link><description>Recent content in compsci on</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://sethmb.xyz/tags/compsci/index.xml" rel="self" type="application/rss+xml"/><item><title>Building Blocks</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Building-Blocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Building-Blocks/</guid><description>An algorithm is an unambiguous, repeatable set of instructions that can be followed to complete a given task in a finite time.</description></item><item><title>Literals, variables and constants</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Literals-Variables-Constants/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Literals-Variables-Constants/</guid><description>Literals A literal is a directly defined value. &amp;quot;25&amp;quot; is a literal. So is true
In Python, this is an example of a literal:</description></item><item><title>Subroutines</title><link>https://sethmb.xyz/sixth/CompSci/Programming/Subroutines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sethmb.xyz/sixth/CompSci/Programming/Subroutines/</guid><description>Instead of writing a huge, monolithic piece of code, you can break a program down into smaller pieces, called subroutines. These allow for increased modularity in an application.</description></item></channel></rss>